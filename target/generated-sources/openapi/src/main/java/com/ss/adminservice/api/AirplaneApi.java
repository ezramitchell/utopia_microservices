/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.1.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.ss.adminservice.api;

import com.ss.adminservice.dto.Airplane;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;
import springfox.documentation.annotations.ApiIgnore;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2021-06-19T12:52:51.050113-06:00[America/Denver]")
@Validated
@Api(value = "airplane", description = "the airplane API")
public interface AirplaneApi {

    default AirplaneApiDelegate getDelegate() {
        return new AirplaneApiDelegate() {};
    }

    /**
     * PUT /airplane
     * add airplane
     *
     * @param airplane  (optional)
     * @return add successful (status code 200)
     *         or add failed (status code 400)
     */
    @ApiOperation(value = "", nickname = "addAirplane", notes = "add airplane", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "add successful"),
        @ApiResponse(code = 400, message = "add failed") })
    @PutMapping(
        value = "/airplane",
        consumes = { "application/json" }
    )
    default ResponseEntity<Void> addAirplane(@ApiParam(value = ""  )  @Valid @RequestBody(required = false) Airplane airplane) {
        return getDelegate().addAirplane(airplane);
    }


    /**
     * GET /airplane/{airplaneId}
     * get airplane at id
     *
     * @param airplaneId  (required)
     * @return returns airplane (status code 200)
     */
    @ApiOperation(value = "", nickname = "getAirplane", notes = "get airplane at id", response = Airplane.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "returns airplane", response = Airplane.class) })
    @GetMapping(
        value = "/airplane/{airplaneId}",
        produces = { "application/json" }
    )
    default ResponseEntity<Airplane> getAirplane(@ApiParam(value = "",required=true) @PathVariable("airplaneId") String airplaneId) {
        return getDelegate().getAirplane(airplaneId);
    }


    /**
     * GET /airplane
     * get all airplanes
     *
     * @return list of airplanes (status code 200)
     */
    @ApiOperation(value = "", nickname = "getAllAirplanes", notes = "get all airplanes", response = Airplane.class, responseContainer = "List", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "list of airplanes", response = Airplane.class, responseContainer = "List") })
    @GetMapping(
        value = "/airplane",
        produces = { "application/json" }
    )
    default ResponseEntity<List<Airplane>> getAllAirplanes() {
        return getDelegate().getAllAirplanes();
    }


    /**
     * POST /airplane/{airplaneId}
     * update airplane
     *
     * @param airplaneId  (required)
     * @param airplane  (optional)
     * @return update succesful (status code 200)
     *         or update failed (status code 400)
     */
    @ApiOperation(value = "", nickname = "updateAirplane", notes = "update airplane", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "update succesful"),
        @ApiResponse(code = 400, message = "update failed") })
    @PostMapping(
        value = "/airplane/{airplaneId}",
        consumes = { "application/json" }
    )
    default ResponseEntity<Void> updateAirplane(@ApiParam(value = "",required=true) @PathVariable("airplaneId") String airplaneId,@ApiParam(value = ""  )  @Valid @RequestBody(required = false) Airplane airplane) {
        return getDelegate().updateAirplane(airplaneId, airplane);
    }

}
